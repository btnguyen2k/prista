## Log configurations

## "temp" directory to buffer incoming messages
# override this settinng with env TEMP_DIR
temp_dir = "./temp"
temp_dir = ${?TEMP_DIR}

## Max number of concurrent log writes
# override this setting with env MAX_WRITE_THREADS
max_write_threads = 128
max_write_threads = ${?MAX_WRITE_THREADS}

## Logs are collected into categories.
# Each category is identified by a unique name and handled by a log writer.
log {
  ## log writer configuration for "default" category.
  # "Default" category is where logs that do not belong to any category go to.
  default {
    ## log writer type: "file", "forward" or "fanout"
    # override this settinng with env LOG_DEFAULT_TYPE
    type = "file"
    type = ${?LOG_DEFAULT_TYPE}

    ## Configuration for "file" log writer
    # This log writer writes logs to files on disk
    file {
      ## root directory to store log files
      # override this settinng with env LOG_DEFAULT_FILE_ROOT
      root = "./log/default"
      root = ${?LOG_DEFAULT_FILE_ROOT}

      ## file rotation each minute (Go style of datetime format)
      # override this settinng with env LOG_DEFAULT_FILE_PATTERN
      file_pattern = "default.log-20060102_1504"
      file_pattern = ${?LOG_DEFAULT_FILE_PATTERN}

      ## log content type: "tsv" or "json"
      # "tsv": <category-name>\t<log-message>
      # "json" (default): {"category":<category-name>, "message": <log-message>}
      # override this settinng with env LOG_DEFAULT_FILE_TYPE
      log_type = "json"
      log_type = ${?LOG_DEFAULT_FILE_TYPE}

      ## if log is failed to be written, the write is retrying for (at least) a number of seconds before the log entry is discarded
      # - default value: 60
      # - value of 0: no retry
      # - negative value: retry forever!
      # override this settinng with env LOG_DEFAULT_FILE_RETRIES
      retry_seconds = 60
      retry_seconds = ${?LOG_DEFAULT_FILE_RETRIES}
    }
  }

  //  ## log writer configuration for "vicarius" category.
  //  vicarius {
  //    type = "forward"
  //
  //    ## Configuration for "forward" log writer
  //    # This log writer forwards logs to another prista instance
  //    forward {
  //      ## Destination to forward log to
  //      # either udp://host:port or grpc://host:port or http://host:port (or https://host:port)
  //      # (destinated prista must be v0.1.1 or higher to work with http(s)-forwarding)
  //      # override this settinng with env LOG_VICARIUS_FORWARD_DESTINATION
  //      #destination = "udp://localhost:18070"
  //      #destination = "http://localhost:18080"
  //      #destination = "grpc://localhost:18090"
  //      destination = ${?LOG_VICARIUS_FORWARD_DESTINATION}
  //
  //      retry_seconds = 180
  //      retry_seconds = ${?LOG_VICARIUS_FORWARD_RETRIES}
  //    }
  //  }

  //  cata {
  //    type = "file"
  //    file {
  //      root = "./log/cata"
  //      file_pattern = "cata.log-20060102"
  //      log_type = "json"
  //      retry_seconds = 60
  //    }
  //  }
  //  catb {
  //    type = "file"
  //    file {
  //      root = "./log/catb"
  //      file_pattern = "catb.log-20060102"
  //      log_type = "json"
  //      retry_seconds = 60
  //    }
  //  }
  //  ## log writer configuration for "fanout" category.
  //  fanout {
  //    type = "fanout"
  //
  //    ## Configuration for "fanout" log writer
  //    # This log writer fan-outs logs to other log writers
  //    fanout {
  //      # fan-out incoming logs to 2 others categories "cata" and "catb"
  //      targets = "cata,catb"
  //      # note: messages are fan-outed asynchronously via message queue, so "retry_seconds" is not used
  //    }
  //  }
}
