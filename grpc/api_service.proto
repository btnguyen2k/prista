/**
  * API service definition for gRPC.
  *
  * By Thanh Nguyen <btnguyen2k@gmail.com>
  * Since v0.1.0
  */

/**
rm -f *.go && protoc -I ./ api_service.proto --go_out=plugins=grpc:.
*/

syntax = "proto3";
option go_package = "grpc";
option optimize_for = SPEED;

import "google/protobuf/empty.proto";

// Log message structure
message PLogMessage {
    string category = 1; // category name
    string message  = 2; // message to log
}

message PLogResult {
    int32 status     = 1; // response status (200 = ok, 400 = client error; 500 = server error)
    int32 numSuccess = 2; // number of successfully logged message
    string message   = 3; // further description message, if any
}

service PLogCollectorService {
    // Test if server is online.
    rpc ping (google.protobuf.Empty) returns (google.protobuf.Empty);

    // Send a log message to collector service.
    rpc log (PLogMessage) returns (PLogResult);

    // Send stream of log messages to collector service.
    rpc logStream (stream PLogMessage) returns (PLogResult);
}
